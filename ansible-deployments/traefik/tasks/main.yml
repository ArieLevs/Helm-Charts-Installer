---
  - name: Traefik | Namespace
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: ingress-traefik

  - name: Traefik | Defualt Certificate
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: tls-cert
          namespace: ingress-traefik
        type: Opaque
        data:
          tls.crt: "{{ crt_base64 | default(secret.localhost_cert) }}"
          tls.key: "{{ key_base64 | default(secret.localhost_key) }}"

  - name: Traefik | ConfigMap
    k8s:
      state: present
      definition:
        kind: ConfigMap
        apiVersion: v1
        metadata:
         name: traefik
         namespace: ingress-traefik
        data:
         traefik-config: |-
           InsecureSkipVerify = {{ insecure_skip_verify | default(config_map.insecure_skip_verify) }}
           [entryPoints]
             [entryPoints.http]
             address = ":80"
             [entryPoints.https]
             address = ":443"
              [entryPoints.https.tls]
                [[entryPoints.https.tls.certificates]]
                certFile = "/ssl/tls.crt"
                keyFile = "/ssl/tls.key"

  - name: Traefik | ServiceAccount
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: traefik-ingress-controller
          namespace: ingress-traefik

  - name: Traefik | DaemonSet
    k8s:
      state: present
      definition:
        kind: DaemonSet
        apiVersion: extensions/v1beta1
        metadata:
          name: traefik-ingress-controller
          namespace: ingress-traefik
          labels:
            k8s-app: traefik-ingress-lb
        spec:
          template:
            metadata:
              labels:
                k8s-app: traefik-ingress-lb
                name: traefik-ingress-lb
            spec:
              hostNetwork: "{{ host_network | default(daemon_set.host_network) }}"
              serviceAccountName: traefik-ingress-controller
              terminationGracePeriodSeconds: 60
              volumes:
                - secret:
                    secretName: tls-cert
                  name: ssl
                - configMap:
                    defaultMode: 420
                    items:
                    - key: traefik-config
                      path: traefik.toml
                    name: traefik
                  name: traefik-config-volume
              containers:
              - image: traefik
                name: traefik-ingress-lb
                ports:
                - name: https
                  containerPort: 443
                  hostPort: 443
                - name: http
                  containerPort: 80
                  hostPort: 80
                - name: admin
                  containerPort: 8080
                  hostPort: 8080
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                    add:
                    - NET_BIND_SERVICE
                args:
                - --api
                - --kubernetes
                - --logLevel=INFO
                - --configFile=/etc/traefik/traefik.toml
                volumeMounts:
                  - mountPath: /ssl
                    name: ssl
                  - mountPath: /etc/traefik
                    name: traefik-config-volume

  - name: Traefik | Service
    k8s:
      state: present
      definition:
        kind: Service
        apiVersion: v1
        metadata:
          name: traefik-ingress-service
          namespace: ingress-traefik
        spec:
          type: "{{ service_type | default(service.type) }}"
          selector:
            k8s-app: traefik-ingress-lb
          ports:
            - protocol: TCP
              port: 443
              name: https
              targetPort: 443
            - protocol: TCP
              port: 80
              name: web
              targetPort: 80
            - protocol: TCP
              port: 8081
              targetPort: 8080
              name: admin

  - name: Traefik | Ingress
    k8s:
      state: present
      definition:
        apiVersion: extensions/v1beta1
        kind: Ingress
        metadata:
          name: traefik-web-ui
          namespace: ingress-traefik
          annotations:
            kubernetes.io/ingress.class: traefik
            #traefik.ingress.kubernetes.io/frontend-entry-points: https
        spec:
          rules:
          - host: "{{ dashboard_host | default(ingress.host) }}"
            http:
              paths:
              - path: /
                backend:
                  serviceName: traefik-ingress-service
                  servicePort: admin

  - name: Traefik | ClusterRole
    k8s:
      state: present
      definition:
        kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: traefik-ingress-controller
        rules:
          - apiGroups:
              - ""
            resources:
              - services
              - endpoints
              - secrets
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - extensions
            resources:
              - ingresses
            verbs:
              - get
              - list
                - watch

  - name: Traefik | ClusterRoleBinding
    k8s:
      state: present
      definition:
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: traefik-ingress-controller
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: traefik-ingress-controller
        subjects:
        - kind: ServiceAccount
          name: traefik-ingress-controller
          namespace: kube-system
